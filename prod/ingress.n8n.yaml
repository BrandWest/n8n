apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels: 
    app.kubernetes.io/name: n8n
    app.kubernetes.io/instance: n8n
  name: n8n-ingress
  namespace: n8n
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: n8n-letsencrypt
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"  
    nginx.ingress.kubernetes.io/rewrite-target: /
    avp.kubernetes.io/path: "argocd/data/argocd-vault-plugin/n8n"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      # Required headers from n8n docs
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Proto $scheme;
      # Additional helpful headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_cache_bypass $http_upgrade;
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - <n8n_external_url>
    secretName: n8n-cert
  rules:
  - host: <n8n_external_url>
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-external  # Matches Service name above
            port:
              number: 5678      # Matches Service port
