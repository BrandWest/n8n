apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: n8n
  name: n8n
  namespace: n8n
  annotations:
    avp.kubernetes.io/path: "argocd/data/argocd-vault-plugin/n8n"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: n8n
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: n8n
    spec:
      securityContext:           
        fsGroup: 3000            
      initContainers:
        - name: volume-permissions
          image: busybox:1.36
          command: ["sh", "-c", "chown -R 3000:3000 /home/node/.n8n && chmod -R 755 /home/node/.n8n"]
          volumeMounts:
            - name: n8n-claim0
              mountPath: /home/node/.n8n
          securityContext:
            runAsUser: 0
      containers:
        - command:
            - /bin/sh
          args:
            - -c
            - sleep 5; n8n start
          env:
            - name: WEBHOOK_URL
              value: https://<n8n_internal_url>              
            - name: N8N_HOST
              value: <n8n_internal_url>
            - name: N8N_METRICS
              value: "true"
            - name: DB_TYPE
              value: postgresdb
            - name: DB_POSTGRESDB_HOST
              value: <n8n_internal_postgres_url>
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_DATABASE
              value: n8n
            - name: N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS
              value: "true"
            - name: N8N_USER_FOLDER
              value: /home/node/.n8n
            - name: N8N_SECURE_COOKIE
              value: "true"
            - name: N8N_PROTOCOL
              value: "https"
            - name: N8N_PORT
              value: "5678"
            - name: N8N_ENDPOINT_REST
              value: "rest"
            - name: N8N_LOG_LEVEL
              value: "info"           
            - name: N8N_SSL_KEY
              value: "/etc/ssl/certs/n8n/tls.key"
            - name: N8N_SSL_CERT
              value: "/etc/ssl/certs/n8n/tls.crt"    
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_NON_ROOT_USER
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_NON_ROOT_PASSWORD
                readOnly: true
          image: n8nio/n8n
          name: n8n
          securityContext:
            runAsUser: 3000
            runAsGroup: 3000
          ports:
            - containerPort: 5678
              name: n8n-internal
              protocol: TCP
            # - containerPort: 5678
          resources:
            requests:
              memory: "250Mi"
            limits:
              memory: "500Mi"
          volumeMounts:
            - mountPath: /home/node/.n8n
              name: n8n-claim0
            - name: tls-certs
              mountPath: /etc/ssl/certs/n8n
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: n8n-claim0
          persistentVolumeClaim:
            claimName: n8n-claim0
        - name: n8n-secret
          secret:
            secretName: n8n-secret
        - name: postgres-secret
          secret:
            secretName: postgres-secret
        - name: tls-certs
          secret:
            secretName: n8n-tls-secret         
