# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: n8n-ingress
#   namespace: n8n-dev
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     cert-manager.io/issuer: n8n-letsencrypt
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"    

# spec:
#   ingressClassName: nginx
#   rules:
#   - host: n8n.diagon.ally
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: n8n-external-svc
#             port:
#               number: 80

---
# Separate Ingress for n8n (HTTP backend) - External Resources Namespace
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n8n-ingress
  namespace: n8n
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: "vault-issuer"  # Using Issuer instead of ClusterIssuer
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # # HTTP backend (default)
    # nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    avp.kubernetes.io/path: "argocd/data/argocd-vault-plugin/n8n"   
spec:
  tls:
  - hosts:
    - <n8n_internal_url>  #n8n-internal-url
    secretName: diagon-ally-tls 
  rules:
  - host: <n8n_internal_url>  #n8n-internal-url
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: n8n-internal
            port:
              number: 5678